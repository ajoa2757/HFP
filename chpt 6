# HFP
Head_First_Python

=========================
데이터 다루기 - 파일

데이터 스트림이란 ? : 파일의 입출력 단계 사이의 어딘가에 있는 중간자. 


task = open(name,method) 
: name은 열고자 하는 파일의 이름을, method는 목적을 나타낸다.(default 는 읽기)
: open 은 파일 스트림을 반환한다. 파일 스트림 임시객체를 반환한다.

이렇게 생성한 파일 스트림은, 주어진 method 작업을 name 파일에 가할 수 있는 권한을 가진다.

print('put out the trash',file = task)
: print는 출력 함수이다. 이 함수는 프롬프트에 출력을 하는 것이 일반적이다.
: file = task 매개변수가 전달되면서, 출력 목적지는 task 스트림이 가리키는 name 이라는 파일이 된다.
: 출력된 문자열은, name 파일에 전달되어 put out the trash 가 입력되는 식이다. 

task.close()
: open 으로 생성된 파일 스트림은 반드시 close 를 통해 닫아져야만 한다


====================
데이터 읽기

name 파일에 print 를 통해 몇 행의 문자열이 입력되었다고 하자.

입력 모드로 생성된 스트림을 닫고, 다시 읽기 모드(=디폴트)로 스트림을 새로 연다.

for chores in task:
  print(chores)
  
위 작업은, task 안에 입력된 몇 행의 문자열들을 한 행식 출력한다.
*이때 특이한 점은, 문자열 끝의 \n 이 개행문자로 인지되면서, 행들이 출력되면서 한 행씩 띄어쓰기가 된다.
print(chores,end = '')를 추가하면 이와 같은 현상이 일어나지 아니한다. 

chores 에 task 내부의 문자열이 한 행씩 돌아가면서 할당된다.

=============
with 으로 스트림 사용하기

with open(name, method) as tasks:
  ...
  ...
  
위와 같은 방법으로 tasks 에 할당된 파일 스트림을 사용하게 되면, with 스위트가 닫힐 때 close 가 알아서 호출된다.


tasks.read() : tasks가 가르키는 파일의 모든 내용을 문자열로 만들어 반환한다. 
ㄴ>str 객체에 할당하여 return 한다던가 하는 식으로 사용한다.
==============



